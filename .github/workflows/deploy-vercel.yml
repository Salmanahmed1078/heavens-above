name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Install dependencies (if any)
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          elif [ -f package.json ]; then
            npm install --no-audit --no-fund
          else
            echo "No package.json found; skipping install."
          fi

      - name: Build data
        run: |
          if [ -f run.js ]; then
            node run.js
            echo "Data build completed. Checking public/data..."
            ls -la public/data/ || echo "WARNING: public/data directory not found after run.js"
          else
            echo "run.js not found; skipping data build."
          fi

      - name: Include docs into public
        run: |
          mkdir -p public/docs
          if [ -d docs ]; then rsync -a --delete docs/ public/docs/; fi

      - name: Verify public directory structure
        run: |
          echo "Contents of public/:"
          ls -la public/ || echo "public/ directory does not exist"
          echo ""
          echo "Contents of public/data/:"
          ls -la public/data/ 2>/dev/null || echo "public/data/ directory does not exist"

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Show files to be deployed
        run: |
          echo "Files in public/ that will be deployed:"
          find public -type f | head -20 || echo "No files found in public/"
          echo ""
          echo "Total size of public/:"
          du -sh public/ || echo "public/ does not exist"

      - name: Vercel deploy (production)
        id: vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          ARGS=(--prod --yes --token "$VERCEL_TOKEN")
          # Provide project ID if available
          if [ -n "$VERCEL_PROJECT_ID" ]; then
            ARGS+=(--project "$VERCEL_PROJECT_ID")
          fi
          # Provide scope if available (optional for personal accounts)
          if [ -n "$VERCEL_ORG_ID" ]; then
            ARGS+=(--scope "$VERCEL_ORG_ID")
          fi
          DEPLOY_URL=$(vercel deploy "${ARGS[@]}" \
            2>&1 | tee /tmp/vercel-deploy.log | grep -Eo 'https://[^ ]+vercel\.app' | tail -n1)
          echo "url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      - name: Output deployment URL
        run: echo "Vercel URL: ${{ steps.vercel.outputs.url }}"


